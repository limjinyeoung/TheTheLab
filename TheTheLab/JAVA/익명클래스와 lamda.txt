closure : 다른 컨텍스트의 변수를 암묵적으로 전달받는 기술 (람다에서 사용하듯)




익명클래스의 장점
1.클로져를 사용할 수 있다.
2.이름을 별도로 지을 필요가 없다.

문제점								=====>lambda 로 고칠 수 있다.
1.프로그램의 구동 시간에 영향이 간다. (컴파일시간은 문제가 없음)
2.보일러 플레이트 (반드시 필요하지만 반복되는 코드)가 발생한다.
3.클로져를 사용할 때 반드시(Java 7) final이 지정되어야 한다.





lamda 장점(익명클래스를 대체함)
1.익명클래스의 클래스 로딩시간이 없어서 구동시간이 짧다.
2.반복되는 코드가 거의 없다.
3.final없이 클로져를 사용한다.

lamda의 제약조건
1.인터페이스에 오직 한개의 함수만 존재해야 한다. 
  ==>@FunctionalInterface를 앞에 붙여 오류를 캐치함.