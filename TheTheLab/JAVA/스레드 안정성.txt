++n을 처리할 때
->memory의 n을 cpu의 레지스터에 저장
->레지스터에서 연산후
->memory의 n에 저장

만약 ++n이 두번 나온다면?
스레드 안정성이 깨지는 이유?
-> 연산이 원자적이지 않다.(쪼개지지 않는다.)

vector, stringBuffer, hashTable을 왜 쓰면 안되나?
-> 멀티 스레드 불안정(잘못 설계된 라이브러리) : 동기화의 정책을 라이브러리가 결정하면 안된다.

