함수포인터의 목적 : 실행 시간에 어떤 함수를 호출할지 제어할 수 있다. (java에서의 인터페이스)

->공통성과 가변성의 분리
=변하는 것과 변하지 않는 것은 분리되어야 한다.
=변하지 않는 전체 알고리즘에서 변해야하는 정책은 분리되어야 한다.
=함수에서 분리하는 방법 =>인자로 분리한다.


cmp를 만들 때 규칙 
-왼쪽이 클 때 > 0
-오른쪽이 클 때 < 0
-같을 때 = 0


qsort

함수포인터와 배열포인터의 표현식은 복잡하기 때문에, typedef를 이용하면 간단하게 사용할 수 있다.

typedef int (*compare_t)(const void*, const void*);

compare_t compare[4] = {   }; 











가위 가위 가위 111  비김 	3
    
가위 가위 바위 112  2점		4 바위 1명 승

가위 가위 보   113  1점		5 가위 2명 승



가위 바위 가위 121  2점		4 바위 1명 승

가위 바위 바위 122  1점		5 바위 2명 승

가위 바위 보   123  비김	6
	


가위 보   가위 131  1점		5 가위 2명 승

가위 보   바위 132  비김	6

가위 보   보   133  2점		7 가위 1명 승




바위 가위 가위 211  2점		4 바위 1명 승
바위 가위 바위 212  1점		5 바위 2명 승
바위 가위 보   213  비김	6

바위 바위 가위 221  1점		5 바위 2명 승
바위 바위 바위 222  비김 	6
바위 바위 보   223  2점 	7 보 1명 승

바위 보 가위   231  비김	6
바위 보 바위   232  2점		7 보 1명 승
바위 보 보     233  1점		8 보 2명 승




